{"version":3,"sources":["contexts/post_context.js","components/Form.js","components/Post.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["PostContext","createContext","PostProvider","props","useState","posts","setPosts","postToEdit","setPostToEdit","getPosts","a","fetch","process","response","json","body","console","log","createPost","post","e","preventDefault","fetchOptions","method","headers","JSON","stringify","deletePost","_id","updatePost","like","useEffect","api","useMemo","Provider","value","children","usePostContext","useContext","StyledForm","styled","form","Form","title","message","creator","tags","file","newPost","setNewPost","selectedFile","onSubmit","htmlFor","id","type","onChange","target","multiple","onClick","clear","StyledPost","div","url","Post","className","likeCount","StyledPosts","Posts","length","map","p","StyledApp","ProvidedApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73528fe4.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst PostContext = createContext();\n\nexport function PostProvider(props) {\n  const [posts, setPosts] = useState([]);\n  const [postToEdit, setPostToEdit] = useState(null);\n\n  const getPosts = async () => {\n    const response = await fetch(`${process.env.REACT_APP_URL}/posts`);\n    const body = await response.json();\n    console.log(response);\n    console.log(body);\n    setPosts(body);\n  };\n\n  const createPost = async (post, e) => {\n    e.preventDefault();\n    console.log(\"create\");\n    console.log(post);\n    const fetchOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(post),\n    };\n    const response = await fetch(\n      `${process.env.REACT_APP_URL}/posts`,\n      fetchOptions\n    );\n    const body = await response.json();\n    console.log(body);\n    setPosts([...posts, body]);\n  };\n\n  const deletePost = async (post) => {\n    const fetchOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n    const response = await fetch(\n      `${process.env.REACT_APP_URL}/posts/${post._id}`,\n      fetchOptions\n    );\n    const body = await response.json();\n    console.log(body);\n    setPosts(body);\n  };\n\n  const updatePost = async (post, e) => {\n    e.preventDefault();\n    console.log(\"update\");\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(post),\n    };\n    const response = await fetch(\n      `${process.env.REACT_APP_URL}/posts/${post._id}`,\n      fetchOptions\n    );\n    const body = await response.json();\n    console.log(post);\n    setPosts(body);\n    setPostToEdit(null);\n  };\n\n  const like = async (post) => {\n    const fetchOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Conntent-type\": \"application/json\",\n      },\n    };\n    const response = await fetch(\n      `${process.env.REACT_APP_URL}/posts/like/${post._id}`,\n      fetchOptions\n    );\n    const body = await response.json();\n    setPosts(body);\n  };\n\n  useEffect(() => {\n    getPosts();\n    console.log(posts);\n  }, []);\n\n  const api = useMemo(\n    () => ({\n      posts,\n      setPosts,\n      postToEdit,\n      setPostToEdit,\n      createPost,\n      updatePost,\n      deletePost,\n      like,\n    }),\n    [\n      posts,\n      setPosts,\n      postToEdit,\n      setPostToEdit,\n      createPost,\n      updatePost,\n      deletePost,\n      like,\n    ]\n  );\n\n  return (\n    <PostContext.Provider value={api}>{props.children}</PostContext.Provider>\n  );\n}\n\nexport const usePostContext = () => useContext(PostContext);\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { usePostContext } from \"../contexts/post_context\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  width: 30%;\n  height: fit-content;\n  max-width: 300px;\n  padding: 1rem;\n\n  & > label {\n    margin: 0.5rem 0;\n    display: flex;\n    flex-direction: column;\n\n    & > input {\n      padding: 5px 5px;\n      border-radius: 5px;\n      border: 1px solid grey;\n\n      &:focus {\n        border: 1px solid lightblue;\n        outline: none;\n      }\n    }\n\n    & > #file {\n      border: none;\n      padding: unset;\n    }\n  }\n\n  & > button {\n    margin: 0.5rem 0;\n    padding: 0.25rem;\n  }\n`;\n\nfunction Form() {\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    message: \"\",\n    creator: \"\",\n    tags: \"\",\n    file: \"\",\n  });\n  const {\n    createPost,\n    posts,\n    postToEdit,\n    setPostToEdit,\n    updatePost,\n  } = usePostContext();\n\n  const clear = (e) => {\n    e.preventDefault();\n    setPostToEdit(null);\n    setNewPost({\n      title: \"\",\n      message: \"\",\n      creator: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  useEffect(() => {\n    setNewPost({\n      title: \"\",\n      message: \"\",\n      creator: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  }, [posts]);\n\n  useEffect(() => {\n    if (postToEdit !== null) setNewPost(postToEdit);\n    console.log(postToEdit);\n  }, [postToEdit]);\n\n  return (\n    <StyledForm\n      onSubmit={(e) =>\n        postToEdit === null ? createPost(newPost, e) : updatePost(newPost, e)\n      }\n    >\n      <label htmlFor=\"title\">\n        Title\n        <input\n          id=\"title\"\n          type=\"text\"\n          value={newPost.title}\n          onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n        />\n      </label>\n\n      <label htmlFor=\"message\">\n        Message\n        <input\n          id=\"message\"\n          type=\"text\"\n          value={newPost.message}\n          onChange={(e) => setNewPost({ ...newPost, message: e.target.value })}\n        />\n      </label>\n\n      <label htmlFor=\"creator\">\n        Creator\n        <input\n          id=\"creator\"\n          type=\"text\"\n          value={newPost.creator}\n          onChange={(e) => setNewPost({ ...newPost, creator: e.target.value })}\n        />\n      </label>\n\n      <label htmlFor=\"tags\">\n        Tags\n        <input\n          id=\"tags\"\n          type=\"text\"\n          value={newPost.tags}\n          onChange={(e) => setNewPost({ ...newPost, tags: e.target.value })}\n        />\n      </label>\n\n      <label htmlFor=\"url\">\n        File\n        <input\n          id=\"url\"\n          type=\"url\"\n          multiple={false}\n          value={newPost.selectedFile}\n          onChange={(e) =>\n            setNewPost({\n              ...newPost,\n              selectedFile: e.target.value,\n            })\n          }\n        />\n      </label>\n\n      <button type=\"submit\">Submit</button>\n      <button onClick={(e) => clear(e)}>Clear</button>\n    </StyledForm>\n  );\n}\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { usePostContext } from \"../contexts/post_context\";\n\nconst StyledPost = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  height: 350px;\n  background-color: #e6e4e4;\n  margin: 1rem;\n  border-radius: 10px;\n\n  & > .post_img {\n    position: relative;\n    background: url(${(props) => props.url}) center no-repeat;\n    background-size: 100%;\n    width: 100%;\n    height: 50%;\n    border-radius: 10px 10px 0 0;\n\n    & > .post_img_data {\n      position: absolute;\n      margin: 1rem;\n      display: flex;\n      flex-direction: column;\n      color: white;\n      font-weight: bold;\n\n      & > .post_creator {\n        text-transform: capitalize;\n        margin-bottom: 0.5rem;\n      }\n\n      & > .post_date {\n        font-size: 0.75rem;\n      }\n    }\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      background-color: rgba(0, 0, 0, 0.3);\n      height: 100%;\n      width: 100%;\n      border-radius: 10px 10px 0 0;\n    }\n\n    & > .post_dots {\n      position: absolute;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      top: 0;\n      right: 0;\n      margin: 1rem;\n      cursor: pointer;\n      width: 30px;\n      height: 30px;\n      border-radius: 50%;\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.3);\n      }\n\n      & > .post_dot {\n        display: block;\n        width: 5px;\n        height: 5px;\n        border-radius: 50%;\n        background-color: white;\n        margin: 1px;\n      }\n    }\n  }\n\n  & > .post_data {\n    display: flex;\n    flex-direction: column;\n    height: 50%;\n    padding: 0.5rem 1rem;\n\n    & > .post_title {\n      text-transform: capitalize;\n      margin: 0.75rem 0;\n    }\n\n    & > .post_message {\n      overflow: scroll;\n      font-size: 0.75rem;\n      /* height: 70%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center; */\n    }\n\n    & > .post_tags {\n      color: grey;\n      font-size: 0.75rem;\n    }\n  }\n  & > .post_buttons {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n\n    & > .post_button {\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      border: none;\n      background-color: unset;\n      font-size: 0.9rem;\n      font-weight: bold;\n      text-transform: uppercase;\n      border-radius: 10px;\n      padding: 3px 6px;\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.2);\n      }\n    }\n\n    & > .like {\n      color: #04a1ff;\n    }\n\n    & > .delete {\n      color: #db0000;\n    }\n  }\n`;\n\nfunction Post(props) {\n  const { post } = props;\n  const { deletePost, setPostToEdit, like } = usePostContext();\n  return (\n    <StyledPost url={post.selectedFile}>\n      <div className=\"post_img\">\n        <div className=\"post_img_data\">\n          <span className=\"post_creator\">{post.creator}</span>\n          <span className=\"post_date\">date</span>\n        </div>\n        <div onClick={() => setPostToEdit(post)} className=\"post_dots\">\n          <div className=\"post_dot\"></div>\n          <div className=\"post_dot\"></div>\n          <div className=\"post_dot\"></div>\n        </div>\n      </div>\n      <div className=\"post_data\">\n        <span className=\"post_tags\">{post.tags}</span>\n        <h3 className=\"post_title\">{post.title}</h3>\n        <p className=\"post_message\">{post.message}</p>\n      </div>\n      <div className=\"post_buttons\">\n        <button onClick={() => like(post)} className=\"like post_button\">\n          <ThumbUpAltIcon /> Like {post.likeCount}\n        </button>\n        <button onClick={() => deletePost(post)} className=\"delete post_button\">\n          <DeleteIcon /> Delete\n        </button>\n      </div>\n    </StyledPost>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { usePostContext } from \"../contexts/post_context\";\nimport Post from \"./Post\";\n\nconst StyledPosts = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-right: 1rem;\n`;\n\nfunction Posts() {\n  const { posts } = usePostContext();\n  return (\n    <StyledPosts>\n      {posts.length !== 0 ? (\n        posts.map((p) => <Post key={p._id} post={p} />)\n      ) : (\n        <span>There are no posts available at the moment</span>\n      )}\n    </StyledPosts>\n  );\n}\n\nexport default Posts;\n","import styled from \"styled-components\";\nimport Form from \"./components/Form\";\nimport Posts from \"./components/Posts\";\nimport { PostProvider } from \"./contexts/post_context\";\n\nconst StyledApp = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n`;\n\nconst ProvidedApp = () => {\n  return (\n    <StyledApp>\n      <Posts />\n      <Form />\n    </StyledApp>\n  );\n};\n\nfunction App() {\n  return (\n    <PostProvider>\n      <ProvidedApp />\n    </PostProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}